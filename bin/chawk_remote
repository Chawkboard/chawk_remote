#!/usr/bin/env ruby
require 'chawk_remote'
require 'optparse'
require 'yaml'
require 'pp'

options = {}

opt = OptionParser.new do |opts|
  opts.banner = "Usage: chawk [options] command [data]"

  opts.on("-c", "--config file", "Use config file (options will override)") do |config|
    options = YAML.load_file(config)
  end

  opts.on("-h", "--host host host", "Set host (http://foo:500)") do |host|
    options[:host] = host
  end

  opts.on("-x", "--client_api_id id", "Chawk client ID") do |id|
    options[:api_client] = id
  end

  opts.on("-a", "--client_api_key key", "Chawk client ID") do |key|
    options[:api_key] = key
  end

  opts.on("-n", "--series_address node", "Chawk series address") do |node|
    options[:node] = node
  end

end

opt.parse!(ARGV)

unless options[:host]
  puts "Host is missing"
  exit 1
end
unless options[:node]
  puts "Node is missing"
  exit 1
end

unless options[:api_client]
  puts "Client Api is missing"
  exit 1
end

unless options[:api_key]
  puts "Api Key is missing"
  exit 1
end

case ARGV[0]

when "clear"
  x = ChawkRemote::Addr.new(options[:host],options[:node],options[:api_client],options[:api_key])
  puts x.clear

when "add"
  points = ARGV[1..1].flatten.join().split(",")
  x = ChawkRemote::Addr.new(options[:host],options[:node],options[:api_client],options[:api_key])
  puts x.add_points points

when "increment"
  x = ChawkRemote::Addr.new(options[:host],options[:node],options[:api_client],options[:api_key])
  puts x.increment ARGV[1]

when "decrement"
  x = ChawkRemote::Addr.new(options[:host],options[:node],options[:api_client],options[:api_key])
  puts x.decrement ARGV[1]

when "last"
  x = ChawkRemote::Addr.new(options[:host],options[:node],options[:api_client],options[:api_key])
  puts x.last 100
else
  puts "Command #{ARGV[0]} unknown."
end
